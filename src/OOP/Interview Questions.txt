Junior Java Interview Questions:

1. What is OOP?
	-> Object-Oriented Programming (OOP) is a programming paradigm based on the concept of "objects."
	It allows developers to structure programs using objects that represent real-world entities.
	OOP promotes modularity, re-usability, and scalability by organizing code into classes and objects.

2. What is an object?
	-> An object is an instance of a class. It contains state (attributes) and behavior (methods).
	For example, a Car object may have attributes like color and model and behaviors like startEngine() and brake().

3. What is a class?

	->A class is a blueprint or template for creating objects.
	It defines attributes (fields/variables) and behaviors (methods/functions) that its objects will have.

4. Which are the main principles/pillars of OOP?
	-> Encapsulation
	-> Abstraction
	-> Inheritance
	-> Polymorphism

5. What is Encapsulation?
	-> Encapsulation is one of the four pillars of OOP.	It refers to hiding the internal details of an object and only exposing what is necessary.
	This is done by restricting direct access to certain variables and methods using access modifiers (like private, public), and providing controlled access through getter and setter methods.

6. How many access modifiers exist in Java?
	-> Java has four access modifiers:
	1. public
	2. private
	3. protected
	4. (default) (also known as "package-private")



7. How does they work?
    Access modifiers control the visibility of classes, methods, and variables.

    Modifier	Access within the same class	Access within the same package	Access in subclasses (other packages)	Accessible everywhere
    private	                ✅ Yes	            ❌ No	            			❌ No	                        		❌ No
    default (no modifier)	✅ Yes	            ✅ Yes	        				❌ No	                        		❌ No
    protected				✅ Yes				✅ Yes							✅ Yes (only in subclasses)				❌ No
    public					✅ Yes				✅ Yes							✅ Yes									✅ Yes


    ✔ private → Strictest, only within the class.
    ✔ (default) → Accessible within the same package.
    ✔ protected → Accessible within the package + subclasses.
    ✔ public → Accessible from anywhere.


8.  What is Inheritance in Java?


9. What are the different types of inheritance in Java?


10. Can a subclass inherit private members of a superclass?


11. What is the super keyword in Java?

